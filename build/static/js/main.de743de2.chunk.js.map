{"version":3,"sources":["components/Navbar.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search.js","components/Card.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/types.js","context/alert/alertReducer.js","context/alert/alertState.js","context/github/githubReducer.js","context/github/githubState.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","exact","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onChange","event","target","onKeyPress","key","clearUsers","trim","hide","search","show","Card","user","src","avatar_url","alt","login","Home","loading","users","map","id","About","Repos","repos","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","useEffect","params","company","location","bio","blog","following","followers","public_repos","public_gists","style","width","Alert","role","text","aria-label","onClick","SHOW_ALERT","HIDE_ALERT","CLEAR_USERS","GET_REPOS","GET_USER","SEARCH_USERS","SET_LOADING","alertReducer","state","action","payload","AlertState","children","useReducer","dispatch","Provider","handlers","githubReducer","DEFAULT","CLIENT_ID","process","CLIENT_SECRET","GithubState","a","setLoading","axios","get","response","data","items","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de743de2.chunk.js","sourcesContent":["import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nexport const Navbar = () => (\n    <nav className='navbar navbar-dark bg-primary navbar-expand-lg'>\n        <div className=\"navbar-brand\">\n            Github Search\n        </div>\n        <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n                <NavLink exact={true} to=\"/\" className='nav-link'>Home</NavLink>\n            </li>\n            <li className=\"nav-item\">\n                <NavLink to=\"/about\" className='nav-link'>Info</NavLink>\n            </li>\n        </ul>\n    </nav>\n)","import {createContext} from \"react\";\n\nexport const AlertContext = createContext();","import {createContext} from \"react\";\n\nexport const GithubContext = createContext();","import React, {useContext, useState} from \"react\";\nimport {AlertContext} from \"../context/alert/alertContext\";\nimport {GithubContext} from \"../context/github/githubContext\";\n\nexport const Search = () => {\n    const [value, setValue] = useState('');\n    const alert = useContext(AlertContext);\n    const github = useContext(GithubContext)\n\n    const onSubmit = event => {\n        if (event.key !== \"Enter\") {\n            return;\n        }\n\n        github.clearUsers();\n\n        if (value.trim()) {\n            alert.hide();\n            github.search(value.trim());\n        } else {\n            alert.show('Enter user details!')\n        }\n    }\n\n    return (\n        <div className=\"form-group mb-4\">\n            <input\n                type=\"text\"\n                className='form-control'\n                placeholder='Enter username...'\n                value={value}\n                onChange={event => setValue(event.target.value)}\n                onKeyPress={onSubmit}\n            />\n        </div>\n    )\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport const Card = ({user}) =>  (\n        <div className=\"card\">\n            <img src={user.avatar_url} alt={user.login} className='card-img-top' />\n           <div className=\"card-body\">\n               <h5 className=\"card-title\">{user.login}</h5>\n               <Link to={'/profile/' + user.login} className='btn btn-primary'>Open</Link>\n           </div>\n        </div>\n    )","import React, {Fragment, useContext} from \"react\";\nimport {Search} from \"../components/Search\";\nimport {Card} from \"../components/Card\";\nimport {GithubContext} from \"../context/github/githubContext\";\n\nexport const Home = () => {\n    const {loading, users} = useContext(GithubContext);\n\n    return (\n        <Fragment>\n            <Search />\n\n            <div className=\"row\">\n                {loading\n                    ? <p className=\"text-center\">Loading</p>\n                    : users.map(user => (\n                            <div className=\"col-sm-4 mb-4\" key={user.id}>\n                                <Card user={user} />\n                            </div>\n                        )\n                )}\n            </div>\n        </Fragment>\n    )\n}","import React, {Fragment} from \"react\";\n\nexport const About = () => {\n    return (\n        <Fragment>\n            <div className=\"card text-center\">\n                <div className=\"card-header\">\n                </div>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Info</h5>\n                    <p className=\"card-text\">App version <strong>1.0.0</strong></p>\n                </div>\n                <div className=\"card-footer text-muted\">\n                </div>\n            </div>\n        </Fragment>\n    )\n}","import React, {Fragment} from \"react\";\n\nexport const Repos = ({repos}) => (\n    <Fragment>\n        {\n            repos.map(repo => (\n                <div className=\"card mb-3\" key={repo.id}>\n                    <div className=\"card-body\">\n                        <h5>\n                            <a href={repo.html_url} target='_blank' rel=\"noreferrer\">{repo.name}</a>\n                        </h5>\n                    </div>\n                </div>\n            ))\n        }\n    </Fragment>\n)","import React, {useContext, useEffect, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {GithubContext} from \"../context/github/githubContext\";\nimport {Repos} from \"../components/Repos\";\n\nexport const Profile = ({match}) => {\n\n    const {getUser, getRepos, loading, user, repos} = useContext(GithubContext);\n\n    useEffect(() => {\n        getUser(match.params.name);\n        getRepos(match.params.name);\n        // eslint-disable-next-line\n    }, []);\n\n    if (loading) {\n        return <p className=\"text-center\">Loading</p>\n    }\n\n    const {\n        name, company, avatar_url, location, bio, blog, following,\n        login, html_url, followers, public_repos, public_gists\n    } = user;\n\n    return (\n        <Fragment>\n            <Link to='/' className='btn btn-link'>To Home</Link>\n            <div className=\"card mp-4\">\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-3 text-center\">\n                            <img src={avatar_url} alt={name}\n                                 style={{width: '150px'}}/>\n                            <h1>{name}</h1>\n                            {location ? <p>Location: {location}</p> : null}\n                        </div>\n                        <div className=\"col\">\n                            {bio ? <Fragment>\n                                <h3>BIO</h3>\n                                <p>{bio}</p>\n                            </Fragment> : null}\n                            <a href={html_url} target='_black' className='btn btn-dark m-3'>Open profile</a>\n                            <ul>\n                                { login && <li>\n                                        <strong>Username: </strong>{login}\n                                    </li>}\n                                { company && <li>\n                                    <strong>Company: </strong>{company}\n                                </li>}\n                                { blog && <li>\n                                    <strong>Blog: </strong>{blog}\n                                </li>}\n                            </ul>\n\n                            <div className=\"btn btn-primary m-1\">Followers: {followers}</div>\n                            <div className=\"btn btn-success m-1\">Following: {following}</div>\n                            <div className=\"btn btn-info m-1\">Repositories: {public_repos}</div>\n                            <div className=\"btn btn-dark m-1\">Gists: {public_gists}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Repos repos={repos} />\n        </Fragment>\n    )\n}","import React, {useContext} from \"react\";\nimport {AlertContext} from \"../context/alert/alertContext\";\n\nexport const Alert = () => {\n    const {alert, hide} = useContext(AlertContext);\n\n    if (!alert) return null;\n\n    return (\n        <div className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\n             role=\"alert\">\n            {alert.text}\n            <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={hide}></button>\n        </div>\n    )\n}","export const SHOW_ALERT = 'SHOW_ALERT';\nexport const HIDE_ALERT = 'HIDE_ALERT';\nexport const CLEAR_USERS = 'CLEAR_USERS';\nexport const GET_REPOS = 'GET_REPOS';\nexport const GET_USER = 'GET_USER';\nexport const SEARCH_USERS = 'SEARCH_USERS';\nexport const SET_LOADING = 'SET_LOADING';","import {HIDE_ALERT, SHOW_ALERT} from \"../types\";\n\nexport const alertReducer = (state, action) => {\n    switch (action.type) {\n        case SHOW_ALERT:\n            return action.payload\n        case HIDE_ALERT:\n            return null\n        default:\n            return state\n    }\n}","import React, {useReducer} from \"react\";\nimport {AlertContext} from \"./alertContext\";\nimport {alertReducer} from \"./alertReducer\";\nimport {HIDE_ALERT, SHOW_ALERT} from \"../types\";\n\nexport const AlertState = ({children}) => {\n\n    const [state, dispatch] = useReducer(alertReducer, null);\n\n    const hide = () => dispatch({type: HIDE_ALERT});\n    const show = (text, type = 'secondary') => {\n        dispatch({type: SHOW_ALERT, payload: {type, text}})\n    }\n\n    return (\n        <AlertContext.Provider value={{\n            hide, show, alert: state }}>\n            {children}\n        </AlertContext.Provider>\n    )\n}","// import {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from \"../types\";\n//\n// export const githubReducer = (state, action) => {\n//     switch (action.type) {\n//         case SEARCH_USERS:\n//             return {\n//                 ...state,\n//                 users: action.payload,\n//                 loading: false\n//             }\n//         case GET_REPOS:\n//             return {\n//                 ...state,\n//                 repos: action.payload,\n//                 loading: false\n//             }\n//         case GET_USER:\n//             return {\n//                 ...state,\n//                 user: action.payload,\n//                 loading: false\n//             }\n//         case SET_LOADING:\n//             return {\n//                 ...state,\n//                 loading: true\n//             }\n//         case CLEAR_USERS:\n//             return {\n//                 ...state,\n//                 users: []\n//             }\n//         default:\n//             return state\n//     }\n// }\n\nimport {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from '../types'\n\nconst handlers = {\n    [SEARCH_USERS]: (state, {payload}) => ({...state, users: payload, loading: false}),\n    [GET_REPOS]: (state, {payload}) => ({...state, repos: payload, loading: false}),\n    [GET_USER]: (state, {payload}) => ({...state, user: payload, loading: false}),\n    [SET_LOADING]: state => ({...state, loading: true}),\n    [CLEAR_USERS]: state => ({...state, users: []}),\n    DEFAULT: state => state\n}\n\nexport const githubReducer = (state, action) => {\n    const handler = handlers[action.type] || handlers.DEFAULT\n    return handler(state, action)\n}\n\n\n","import React, {useReducer} from \"react\";\nimport axios from \"axios\";\nimport {GithubContext} from \"./githubContext\";\nimport {githubReducer} from \"./githubReducer\";\nimport {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from \"../types\";\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n\nexport const GithubState = ({children}) => {\n    const initialState = {\n        user: {},\n        users: [],\n        loading: false,\n        repos: []\n    }\n    const [state, dispatch] = useReducer(githubReducer, initialState);\n\n    const search = async value => {\n        setLoading();\n\n        const response = await axios.get(\n            `https://api.github.com/search/users?q=${value}&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`);\n\n        dispatch({\n            type: SEARCH_USERS,\n            payload: response.data.items\n        })\n    };\n\n    const getUser = async name => {\n        setLoading();\n\n        const response = await axios.get(\n            `https://api.github.com/users/${name}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`);\n\n        dispatch({\n            type: GET_USER,\n            payload: response.data\n        })\n    };\n\n    const getRepos = async name => {\n        setLoading();\n\n        const response = await axios.get(\n            `https://api.github.com/users/${name}/repos?pee_page=5&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`);\n\n\n        dispatch({\n            type: GET_REPOS,\n            payload: response.data\n        })\n\n    };\n\n    const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n    const setLoading = () => dispatch({ type: SET_LOADING });\n\n    const {user, users, repos, loading} = state;\n\n    return (\n        <GithubContext.Provider value={{\n            setLoading, clearUsers, getRepos, getUser, search,\n            user, users, repos, loading\n        }}>\n            {children}\n        </GithubContext.Provider>\n    )\n}","import React from \"react\";\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport {Navbar} from \"./components/Navbar\";\nimport {Home} from \"./pages/Home\";\nimport {About} from \"./pages/About\";\nimport {Profile} from \"./pages/Profile\";\nimport {Alert} from \"./components/Alert\";\nimport {AlertState} from \"./context/alert/alertState\";\nimport {GithubState} from \"./context/github/githubState\";\n\nfunction App() {\n  return (\n      <GithubState>\n          <AlertState>\n              <BrowserRouter>\n                  <Navbar />\n                  <div className=\"container pt-4\">\n                      <Alert alert={{text: 'Test', type: null}}/>\n                      <Switch>\n                          <Route path='/' exact component={Home} />\n                          <Route path='/about' component={About} />\n                          <Route path='/profile/:name' component={Profile} />\n                      </Switch>\n                  </div>\n              </BrowserRouter>\n          </AlertState>\n      </GithubState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}